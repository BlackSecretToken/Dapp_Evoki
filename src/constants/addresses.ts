import { Networks } from "./blockchain";

const BSC_MAINNET = {
    EVOKI_ADDRESS : "0xE5bA47fD94CB645ba4119222e34fB33F59C7CD90",
    GROWTHFUNDS_ADDRESS : "0xa9c6d0cc785569b450393A69599E97fAED5D9dd9",
    PAIR_ADDRESS : "0xf5D9b8947b11DdF5eE33374cC2865E775EBE00Dc",
    ROUTER_ADDRESS : "0x10ED43C718714eb63d5aA57B78B54704E256024E",
    WBNB_ADDRESS : "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
};

const BSC_TESTNET = {
    EVOKI_ADDRESS : "0xffe9CB038F971992cbAb528a07DEd7640B1148f0",
    GROWTHFUNDS_ADDRESS : "0x1CcCF75aFFcCC00845Ca689aADE55dF1Aa2132Bd",
    PAIR_ADDRESS : "0x29483E20b03C7464805F4cCc9418Ca30a32C3026",
    ROUTER_ADDRESS : "0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3",
    WBNB_ADDRESS : "0xae13d989dac2f0debff460ac112a837c89baa7cd"
};

export const getAddresses = (networkID: number) => {
    if (networkID === Networks.BSC) return BSC_MAINNET;
    if (networkID === Networks.TESTBSC) return BSC_TESTNET;
    throw Error("Network don't support");
};


